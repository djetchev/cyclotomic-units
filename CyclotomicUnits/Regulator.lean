/-
Copyright (c) 2024 Dimitar Jetchev. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: definitions took from the branch `xfr-regulator` of Xavier Roblot
-/
import Mathlib.Algebra.Module.Zlattice.Covolume
import Mathlib.NumberTheory.NumberField.Units.DirichletTheorem

/-!

# The regulator of a number field

## Important definitions
* `NumberField.Units.regulator`: the regulator of the number field `K`.

## Implementation notes

## TODO

## Tags
Regulator of a number field.

-/

open scoped NumberField

noncomputable section

namespace NumberField.Units

variable (K : Type*) [Field K] [NumberField K]

open MeasureTheory Classical BigOperators NumberField.InfinitePlace NumberField.Units.dirichletUnitTheorem

/-- The regulator of a number fied `K`. -/
def regulator : ‚Ñù := Zlattice.covolume (unitLattice K)

theorem regulator_ne_zero : regulator K ‚â† 0 := Zlattice.covolume_ne_zero (unitLattice K) volume

theorem regulator_pos : 0 < regulator K := Zlattice.covolume_pos (unitLattice K) volume

/-- The subgroup of the unit group generated by a given set of units. -/
def subgroupGeneratedByUnits (units : Set (ùìû K)À£) : Subgroup (ùìû K)À£ := Subgroup.closure (units)

variable {K}

/-- The image of the subgroup generated by a given set of units under the logarithmic embedding. -/
def logEmbeddingSublattice (units : Set (ùìû K)À£): AddSubgroup ({w : InfinitePlace K // w ‚â† w‚ÇÄ} ‚Üí ‚Ñù) :=
  AddSubgroup.closure (units.image (logEmbedding K))

/-- The regulator of the subgroup generated by a given set of units. -/
noncomputable def regulatorSubgroupGenByUnits (units : Set (ùìû K)À£) : ‚Ñù := Zlattice.covolume (logEmbeddingSublattice units)

end NumberField.Units
